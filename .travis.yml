language: python
python:
  - 3.4
env:
  - CXX="clang++"
  # - CXX="g++"
# matrix:
#   include:
#     - python: 3.4
#       env:
#         - CXX="clang++"
#         - CXX="g++"

before_install:
  - sudo add-apt-repository -y ppa:kalakris/cmake
  - if [ "$CXX" == "g++" ]; then     sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test; fi
  - if [ "$CXX" == "clang++" ]; then sudo add-apt-repository -y ppa:h-rayflood/llvm; fi
  - sudo apt-get update -qq

install:
  # install g++ 4.8, if tests are run with g++
  - if [ "$CXX" == "g++" ]; then sudo apt-get install -qq g++-4.8; fi
  - if [ "$CXX" == "g++" ]; then sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.8 50; fi

  # install clang-3.3
  - if [ "$CXX" == "clang++" ]; then sudo apt-get install --allow-unauthenticated -qq clang-3.3; fi
  - if [ "$CXX" == "clang++" ]; then cwd=$(pwd); fi

  # Install libc++ if tests are run with clang++
  - if [ "$CXX" == "clang++" ]; then svn co --quiet http://llvm.org/svn/llvm-project/libcxx/trunk@181765 libcxx; fi

  - if [ "$CXX" == "clang++" ]; then cd libcxx/lib && bash buildit; fi
  - if [ "$CXX" == "clang++" ]; then sudo cp ./libc++.so.1.0 /usr/lib/; fi
  - if [ "$CXX" == "clang++" ]; then sudo mkdir /usr/include/c++/v1; fi
  - if [ "$CXX" == "clang++" ]; then cd .. && sudo cp -r include/* /usr/include/c++/v1/; fi
  - if [ "$CXX" == "clang++" ]; then cd /usr/lib && sudo ln -sf libc++.so.1.0 libc++.so; fi
  - if [ "$CXX" == "clang++" ]; then sudo ln -sf libc++.so.1.0 libc++.so.1 && cd $cwd; fi

  - if [ "$CXX" == "clang++" ]; then CXX=clang++-3.3; fi

  - sudo apt-get install -qq cmake
  - $CXX --version

  # You may want to periodically update this, although the conda update
  # conda line below will keep everything up-to-date.  We do this
  # conditionally because it saves us some downloading if the version is
  # the same.
  - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
      wget http://repo.continuum.io/miniconda/Miniconda-3.4.2-Linux-x86_64.sh -O miniconda.sh;
    else
      wget http://repo.continuum.io/miniconda/Miniconda3-3.4.2-Linux-x86_64.sh -O miniconda.sh;
    fi
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda info -a

  - conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION numpy cython sphinx pytest
  - source activate test-environment

  - pip install "mako"
  - conda list

  - mkdir build
  - cd build
  - cmake ..
  - make
notifications:
  email: false
